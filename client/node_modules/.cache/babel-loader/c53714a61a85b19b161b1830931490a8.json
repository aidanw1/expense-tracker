{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aidan/Desktop/expense-tracker/client/src/components/IncomeExpenses.jsx\",\n    _s = $RefreshSig$();\n\n// import { numberWithCommas } from \"../utils/format\";\n// const IncomeExpenses = () => {\n//   const { transactions } = useContext(GlobalContext);\n//   const expense = (\n//     amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\n//     -1\n//   ).toFixed(2);\n//   return (\n//     <div>\n//       <div className=\"inc-exp-container\">\n//         <div>\n//           <h4>Income</h4>\n//           <p className=\"money plus\">£{numberWithCommas(income)}</p>\n//         </div>\n//         <div>\n//           <h4>Expense</h4>\n//           <p className=\"money minus\">£{numberWithCommas(expense)}</p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default IncomeExpenses;\nimport React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nconst IncomeExpenses = () => {\n  _s();\n\n  const {\n    transactions\n  } = useContext(GlobalContext); //income - filters through and gets anything greater than 0 (all positive numbers)\n  //expense - works the same. Anything less than 0 we add up\n  //and adds them all together using reduce and adds 2 decimals\n\n  const amounts = transactions.map(transaction => transaction.amount);\n  const income = amounts.filter(item => item > 0).reduce((acc, item) => acc += item, 0).toFixed(2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inc-exp-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"money plus\",\n          children: \"\\xA3500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"money minus\",\n          children: \"\\xA30.00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IncomeExpenses, \"Ni2LnfH2vyq3Bhy/VEUHhQfs92s=\");\n\n_c = IncomeExpenses;\nexport default IncomeExpenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"IncomeExpenses\");","map":{"version":3,"sources":["/Users/aidan/Desktop/expense-tracker/client/src/components/IncomeExpenses.jsx"],"names":["React","useContext","GlobalContext","IncomeExpenses","transactions","amounts","map","transaction","amount","income","filter","item","reduce","acc","toFixed"],"mappings":";;;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAmBH,UAAU,CAACC,aAAD,CAAnC,CAD2B,CAG3B;AACA;AACA;;AAEA,QAAMG,OAAO,GAAGD,YAAY,CAACE,GAAb,CAAkBC,WAAD,IAAiBA,WAAW,CAACC,MAA9C,CAAhB;AAEA,QAAMC,MAAM,GAAGJ,OAAO,CACnBK,MADY,CACJC,IAAD,IAAUA,IAAI,GAAG,CADZ,EAEZC,MAFY,CAEL,CAACC,GAAD,EAAMF,IAAN,KAAgBE,GAAG,IAAIF,IAFlB,EAEyB,CAFzB,EAGZG,OAHY,CAGJ,CAHI,CAAf;AAKA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA5BD;;GAAMX,c;;KAAAA,c;AA8BN,eAAeA,cAAf","sourcesContent":["// import { numberWithCommas } from \"../utils/format\";\n\n// const IncomeExpenses = () => {\n//   const { transactions } = useContext(GlobalContext);\n\n//   const expense = (\n//     amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\n//     -1\n//   ).toFixed(2);\n\n//   return (\n//     <div>\n//       <div className=\"inc-exp-container\">\n//         <div>\n//           <h4>Income</h4>\n//           <p className=\"money plus\">£{numberWithCommas(income)}</p>\n//         </div>\n//         <div>\n//           <h4>Expense</h4>\n//           <p className=\"money minus\">£{numberWithCommas(expense)}</p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IncomeExpenses;\nimport React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nconst IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  //income - filters through and gets anything greater than 0 (all positive numbers)\n  //expense - works the same. Anything less than 0 we add up\n  //and adds them all together using reduce and adds 2 decimals\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const income = amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  return (\n    <div>\n      <div className=\"inc-exp-container\">\n        <div>\n          <h4>Income</h4>\n          <p className=\"money plus\">£500</p>\n        </div>\n        <div>\n          <h4>Expense</h4>\n          <p className=\"money minus\">£0.00</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default IncomeExpenses;\n"]},"metadata":{},"sourceType":"module"}