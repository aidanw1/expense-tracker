{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/AddTransaction.jsx","utils/format.js","components/Balance.jsx","components/Header.jsx","components/IncomeExpenses.jsx","components/Transaction.jsx","components/TransactionList.jsx","App.js","index.js"],"names":["state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","AddTransaction","useState","text","setText","amount","setAmount","useContext","onSubmit","e","preventDefault","newTransaction","Math","floor","random","className","htmlFor","onChange","target","placeholder","numberWithCommas","x","toString","replace","Balance","total","map","reduce","acc","item","toFixed","Header","IncomeExpenses","amounts","income","expense","Transaction","sign","abs","onClick","TransactionList","useEffect","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bb1b214.chunk.js","sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case \"GET_TRANSACTIONS\":\n      return {\n        ...state,\n        loading: false,\n        transactions: action.payload,\n      };\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction._id !== action.payload\n        ),\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        //takes new transaction payload being added from the action and a copy of state\n        transactions: [...state.transactions, action.payload],\n        // transactions: [action.payload, ...state.transactions],\n        //when we added from state when we added a new transaction the new one comes with a payload and gets put at the top\n        //when we fetch from the api its the other way around (most current is at the end)\n      };\n    case \"TRANSACTION_ERROR\":\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\n// Initial State\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true,\n  // transactions: [\n  //   { id: 1, text: \"Flower\", amount: -20 },\n  //   { id: 2, text: \"Salary\", amount: 300 },\n  //   { id: 3, text: \"Book\", amount: -10 },\n  //   { id: 4, text: \"Camera\", amount: 150 },\n  // ],\n};\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  // whenever we want to call a reducer action we need to use the dispatch from useReducer\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  async function getTransactions() {\n    try {\n      const res = await axios.get(\"/api/v1/transactions\");\n\n      dispatch({\n        type: \"GET_TRANSACTIONS\",\n        payload: res.data.data,\n      });\n      // res.data.data\n    } catch (err) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: err.response.data.error,\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n\n      dispatch({\n        type: \"DELETE_TRANSACTION\",\n        payload: id,\n      });\n    } catch (err) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: err.response.data.error,\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\"/api/v1/transactions\", transaction, config);\n      dispatch({\n        type: \"ADD_TRANSACTION\",\n        payload: res.data.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: err.response.data.error,\n      });\n    }\n  }\n  // function addTransaction(transaction) {\n  //   dispatch({\n  //     type: \"ADD_TRANSACTION\",\n  //     payload: transaction,\n  //   });\n  // }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        error: state.error,\n        loading: state.loading,\n        getTransactions,\n        deleteTransaction,\n        addTransaction,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nconst AddTransaction = () => {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amount: +amount, //parses string into number\n    };\n\n    addTransaction(newTransaction);\n  };\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Enter text...\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            placeholder=\"Enter amount...\"\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  );\n};\n\nexport default AddTransaction;\n","export function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { numberWithCommas } from \"../utils/format\";\n\nconst Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <>\n      <h4>Your Balance</h4>\n      <h1 id=\"balance\">£{numberWithCommas(total)}</h1>\n    </>\n  );\n};\n\nexport default Balance;\n","import React from 'react'\n\nconst Header = () => {\n    return (\n        <h2>\n            Expense Tracker\n        </h2>\n    )\n}\n\nexport default Header\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { numberWithCommas } from \"../utils/format\";\n\nconst IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const income = amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n  return (\n    <div>\n      <div className=\"inc-exp-container\">\n        <div>\n          <h4>Income</h4>\n          <p className=\"money plus\">£{numberWithCommas(income)}</p>\n        </div>\n        <div>\n          <h4>Expense</h4>\n          <p className=\"money minus\">£{numberWithCommas(expense)}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default IncomeExpenses;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { numberWithCommas } from \"../utils/format\";\n\nconst Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\n\n  return (\n    <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\n      {transaction.text}\n      <span>\n        {sign}£{numberWithCommas(Math.abs(transaction.amount))}\n      </span>\n      <button\n        onClick={() => deleteTransaction(transaction._id)}\n        className=\"delete-btn\"\n      >\n        x\n      </button>\n    </li>\n  );\n};\n\nexport default Transaction;\n","import React, { useContext, useEffect } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport Transaction from \"./Transaction\";\n\nconst TransactionList = () => {\n  const { transactions, getTransactions } = useContext(GlobalContext);\n  //   const context = useContext(GlobalContext);\n\n  //   console.log(context);\n\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <h3>History</h3>\n      <ul className=\"list\">\n        {transactions.map((transaction) => (\n          <Transaction key={transaction.id} transaction={transaction} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default TransactionList;\n","import React from \"react\";\nimport \"./App.css\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport Balance from \"./components/Balance\";\nimport Header from \"./components/Header\";\nimport IncomeExpenses from \"./components/IncomeExpenses\";\nimport TransactionList from \"./components/TransactionList\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}